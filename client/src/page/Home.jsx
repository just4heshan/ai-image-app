import React, { useState, useEffect } from "react";
import { FormField, Card, Loader } from "../components";

const RenderCards = ({data, title}) => {
  if (data?.length > 0)
    return data.map((post) => <Card key={post._id} {...post} />);

  return <h2 className="mt-5 text-blue">{title}</h2>;
};

const Home = () => {
  
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchText, setSearchText] = useState('');
  const [searchedResult, setSearchedResults] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null);


  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()));
        setSearchedResults(searchResult);
      }, 500),
    );
  };

  useEffect(() => {
    const fetchingPosts = async () => {
      setLoading(true);

      try {
        const response = await fetch("https://ai-image-app-ughm.onrender.com/api/v1/post", {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        });

        if(response.ok) {
          const result = await response.json();

          setAllPosts(result.data.reverse());
        };
      } catch (error) {
        alert(error)
      } finally {
        setLoading(false)
      }
    }

    fetchingPosts();
  }, [])

  return (
    <section className="max-h-xl mx-auto flex flex-col items-center">
      <div className="flex flex-col items-center">
        <h1 className="bg-[200%] bg-clip-text text-transparent bg-gradient-to-r from-blue-light to-blue animate-move">The Community Showcase</h1>
        <p className="w-full max-w-[900px] text-center">
          Browse through a collection of imaginative and visually stunning
          images generated by DALL-E AI.
        </p>
      </div>
      <div className="mt-14 w-full flex justify-center">
          <FormField className='max-w-[900px]' labelName='Serach in Gallery' type='text' name='text' placeholder='Search posts' value={searchText} handleChange={handleSearchChange}/>
      </div>
      <div className="mt-10">
        {loading ? (
          <div>
            <Loader />{" "}
          </div>
        ) : (
          <>
            {searchText && (
              <p>
                Showing result for{" "}
                <span className="text-black font-[300] italic">
                  {searchText}
                </span>
              </p>
            )}
            <div className="grid grid-cols-1 xs:grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 w-full justify-items-center gap-3">
              {searchText ? (
                //rendering searched posts
                <RenderCards data={searchedResult} title="No search results found" />
                ) : (
                //rendering all posts
                <RenderCards data={allPosts} title="No posts found" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
